name: Test networking
on: [push]

jobs:
  visual-studio:
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - vs-version: vs2019
            platform: x64
            config: Debug
          - vs-version: vs2019
            platform: x64
            config: Release
            use_zstd: true
          - vs-version: vs2019
            platform: x86
            config: Debug
          - vs-version: vs2019
            platform: x86
            config: Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8.x"

      - name: Install Npcap
        run: |
          .\install_npcap.bat
          echo "PCAP_SDK_DIR=C:\Npcap-sdk" >> $env:GITHUB_ENV

      - name: Download pthreads
        run: |
          git clone https://github.com/seladb/PcapPlusPlus-Deploy
          cd PcapPlusPlus-Deploy\Packages
          7z x pthreads-w32-2-9-1-release.zip -oC:\pthreads

      - name: Set Zstd
        run: |
          .\install_zstd.bat
          echo "ZSTD_HOME_PARAM=-z C:\zstd" >> $env:GITHUB_ENV
        if: matrix.use_zstd == true

      - name: Checkout PcapPlusPlus
        uses: actions/checkout@v2
        with:
          repository: seladb/PcapPlusPlus
          path: './PcapPlusPlus'
          ref: ci-live-tests

      - name: Configure PcapPlusPlus
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          cd PcapPlusPlus
          ./configure-windows-visual-studio.bat -v ${{matrix.vs-version}} -w ${{ env.PCAP_SDK_DIR }} -p C:\pthreads ${{ env.ZSTD_HOME_PARAM }}

      - name: Build PcapPlusPlus
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild /m PcapPlusPlus\mk\${{matrix.vs-version}}\PcapPlusPlus.sln /p:Configuration=${{matrix.config}} /p:Platform=${{matrix.platform}}

      - name: Build Examples
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild /m PcapPlusPlus\mk\${{matrix.vs-version}}\PcapPlusPlus-Examples.sln /p:Configuration=${{matrix.config}} /p:Platform=${{matrix.platform}}

      - name: Build Tutorials
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild /m PcapPlusPlus\mk\${{matrix.vs-version}}\Tutorials.sln /p:Configuration=${{matrix.config}} /p:Platform=${{matrix.platform}}

      - name: Run
        run: |
          python -m pip install -r requirements.txt
          python run_windows.py

  mingw-w64:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - env: i686
            sys: mingw32
          - env: x86_64
            sys: mingw64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: mingw-w64-${{matrix.env}}-gcc mingw-w64-${{matrix.env}}-make

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8.x"

      - name: Install Npcap
        run: |
          .\install_npcap.bat
          echo "PCAP_SDK_DIR=/C/Npcap-sdk" >> $env:GITHUB_ENV

      # - name: Install WinPcap
      #   run: |
      #     .\install_winpcap.bat

      - name: Checkout PcapPlusPlus
        uses: actions/checkout@v2
        with:
          repository: seladb/PcapPlusPlus
          path: './PcapPlusPlus'
          ref: ci-live-tests

      - name: Configure PcapPlusPlus
        working-directory: ${{env.GITHUB_WORKSPACE}}
        shell: msys2 {0}
        run: cd PcapPlusPlus && ./configure-windows-mingw.bat mingw-w64 -m  /${{ matrix.sys }} -w ${{ env.PCAP_SDK_DIR }} -s .

      - name: Build PcapPlusPlus
        working-directory: ${{env.GITHUB_WORKSPACE}}
        shell: msys2 {0}
        run: cd PcapPlusPlus && mingw32-make all

      - name: Run
        run: |
          python -m pip install -r requirements.txt
          python run_windows.py

  macos:
    runs-on: ${{ matrix.os-version }}
    strategy:
      matrix:
        os-version: [macos-10.15, macos-11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout PcapPlusPlus
        uses: actions/checkout@v2
        with:
          repository: seladb/PcapPlusPlus
          path: './PcapPlusPlus'
          ref: ci-live-tests

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.x"

      - name: Install
        run: brew install tcpreplay

      - name: Configure PcapPlusPlus
        run: cd PcapPlusPlus && ./configure-mac_os_x.sh

      - name: Build PcapPlusPlus
        run: cd PcapPlusPlus && make all

      - name: Run
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
          python run.py --interface en0 --use-sudo

  alpine:
    runs-on: ubuntu-20.04
    container: seladb/${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: alpine315
            python: python3
            configure: --musl
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout PcapPlusPlus
        uses: actions/checkout@v2
        with:
          repository: seladb/PcapPlusPlus
          path: './PcapPlusPlus'
          ref: ci-live-tests
    
      - name: Install
        run: |
          apk add tcpreplay --repository=https://dl-cdn.alpinelinux.org/alpine/edge/testing
          apk add py-netifaces

      - name: Configure PcapPlusPlus
        run: cd PcapPlusPlus && ./configure-linux.sh --default ${{ matrix.configure }}

      - name: Build PcapPlusPlus
        run: cd PcapPlusPlus && make all

      - name: Run
        run: |
          ${{ matrix.python }} -m pip install -U pip
          ${{ matrix.python }} -m pip install -r requirements.txt
          ${{ matrix.python }} run.py --interface eth0

  fedora:
    runs-on: ubuntu-20.04
    container: seladb/${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: fedora34
            python: python3
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout PcapPlusPlus
        uses: actions/checkout@v2
        with:
          repository: seladb/PcapPlusPlus
          path: './PcapPlusPlus'
          ref: ci-live-tests
    
      - name: Install
        run: |
          yum install -y net-tools
          yum install -y tcpreplay

      - name: Configure PcapPlusPlus
        run: cd PcapPlusPlus && ./configure-linux.sh --default

      - name: Build PcapPlusPlus
        run: cd PcapPlusPlus && make all

      - name: Run
        run: |
          ${{ matrix.python }} -m pip install -U pip
          ${{ matrix.python }} -m pip install -r requirements.txt
          ${{ matrix.python }} run.py --interface eth0

  centos:
    runs-on: ubuntu-20.04
    container: seladb/${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: centos7
            python: python3.8
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout PcapPlusPlus
        uses: actions/checkout@v2
        with:
          repository: seladb/PcapPlusPlus
          path: './PcapPlusPlus'
          ref: ci-live-tests
    
      - name: Install
        run: |
          yum -y install net-tools
          wget https://github.com/appneta/tcpreplay/releases/download/v4.4.1/tcpreplay-4.4.1.tar.gz
          tar xvzf tcpreplay-4.4.1.tar.gz
          cd tcpreplay-4.4.1
          ./configure
          make
          make install

      - name: Configure PcapPlusPlus
        run: cd PcapPlusPlus && ./configure-linux.sh --default

      - name: Build PcapPlusPlus
        run: cd PcapPlusPlus && make all

      - name: Run
        run: |
          ${{ matrix.python }} -m pip install -U pip
          ${{ matrix.python }} -m pip install -r requirements.txt
          ${{ matrix.python }} run.py --interface eth0 --test-args="-s"

  ubuntu:
    runs-on: ubuntu-20.04
    container: seladb/${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: ubuntu2004
            python: python3
          - image: ubuntu1804
            python: python3.8
          - image: ubuntu1604
            python: python3.8
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout PcapPlusPlus
        uses: actions/checkout@v2
        with:
          repository: seladb/PcapPlusPlus
          path: './PcapPlusPlus'
          ref: ci-live-tests
    
      - name: Install
        run: |
          apt install net-tools
          apt install tcpreplay

      - name: Configure PcapPlusPlus
        run: cd PcapPlusPlus && ./configure-linux.sh --default

      - name: Build PcapPlusPlus
        run: cd PcapPlusPlus && make all

      - name: Run
        run: |
          ${{ matrix.python }} -m pip install -U pip
          ${{ matrix.python }} -m pip install -r requirements.txt
          ${{ matrix.python }} run.py --interface eth0
